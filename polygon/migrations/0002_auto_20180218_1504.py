# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2018-02-18 15:04
from __future__ import unicode_literals

from django.conf import settings
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import polygon.models


class Migration(migrations.Migration):

    dependencies = [
        ('problem', '0013_taginfo'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('polygon', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=24, validators=[polygon.models.NameValidator()])),
                ('file', models.FileField(storage=django.core.files.storage.FileSystemStorage(location='/Users/Scott/PycharmProject/eoj3-jan/repo'), upload_to='assets/%Y%m%d/')),
                ('real_path', models.CharField(blank=True, max_length=192)),
                ('create_time', models.DateTimeField()),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('parent_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fingerprint', models.CharField(default='invalid', max_length=64)),
                ('input_file', models.FileField(storage=django.core.files.storage.FileSystemStorage(location='/Users/Scott/PycharmProject/eoj3-jan/repo'), upload_to='cases/%Y%m%d/')),
                ('output_file', models.FileField(storage=django.core.files.storage.FileSystemStorage(location='/Users/Scott/PycharmProject/eoj3-jan/repo'), upload_to='cases/%Y%m%d/')),
                ('in_samples', models.BooleanField(default=False)),
                ('in_pretests', models.BooleanField(default=False)),
                ('in_tests', models.BooleanField(default=True)),
                ('output_lock', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('case_number', models.PositiveIntegerField(default=1)),
                ('create_time', models.DateTimeField()),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('activated', models.BooleanField(default=True)),
                ('parent_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=24, validators=[polygon.models.NameValidator()])),
                ('lang', models.CharField(choices=[('cpp', 'C++'), ('java', 'Java'), ('python', 'Python')], default='cpp', max_length=12)),
                ('code', models.TextField(blank=True)),
                ('tag', models.CharField(choices=[('checker', 'checker'), ('interactor', 'interactor'), ('generator', 'generator'), ('validator', 'validator'), ('solution_main', 'solution - main correct'), ('solution_correct', 'solution - correct'), ('solution_tle_or_ok', 'solution - time limit exceeded or correct'), ('solution_wa', 'solution - wrong answer'), ('solution_incorrect', 'solution - incorrect'), ('solution_fail', 'solution - runtime error'), ('useless', 'ignore me')], default='checker', max_length=24)),
                ('create_time', models.DateTimeField()),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('fingerprint', models.CharField(max_length=64)),
                ('parent_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Revision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision', models.PositiveIntegerField()),
                ('messages', models.TextField(default='[]')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('time_limit', models.PositiveIntegerField(default=2000)),
                ('memory_limit', models.PositiveIntegerField(default=256)),
                ('alias', models.CharField(max_length=64, validators=[polygon.models.AliasValidator()])),
                ('well_form_policy', models.BooleanField(default=True)),
                ('status', models.IntegerField(choices=[(-1, 'Discarded'), (0, 'Undergoing'), (1, 'Done')], default=0)),
                ('parent_id', models.IntegerField(default=0)),
                ('active_checker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checking_revisions', to='polygon.Program')),
                ('active_interactor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='interacting_revisions', to='polygon.Program')),
            ],
        ),
        migrations.CreateModel(
            name='Statement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='default', max_length=24, validators=[polygon.models.NameValidator()])),
                ('title', models.CharField(max_length=192)),
                ('description', models.TextField(blank=True)),
                ('input', models.TextField(blank=True)),
                ('output', models.TextField(blank=True)),
                ('hint', models.TextField(blank=True)),
                ('create_time', models.DateTimeField()),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('parent_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.AddField(
            model_name='revision',
            name='active_statement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stating_revisions', to='polygon.Statement'),
        ),
        migrations.AddField(
            model_name='revision',
            name='active_validator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validating_revisions', to='polygon.Program'),
        ),
        migrations.AddField(
            model_name='revision',
            name='assets',
            field=models.ManyToManyField(to='polygon.Asset'),
        ),
        migrations.AddField(
            model_name='revision',
            name='cases',
            field=models.ManyToManyField(to='polygon.Case'),
        ),
        migrations.AddField(
            model_name='revision',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revisions', to='problem.Problem'),
        ),
        migrations.AddField(
            model_name='revision',
            name='programs',
            field=models.ManyToManyField(to='polygon.Program'),
        ),
        migrations.AddField(
            model_name='revision',
            name='statements',
            field=models.ManyToManyField(to='polygon.Statement'),
        ),
        migrations.AddField(
            model_name='revision',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
