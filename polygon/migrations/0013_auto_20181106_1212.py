# Generated by Django 2.1.3 on 2018-11-06 12:12

import django.core.files.storage
from django.db import migrations, models
import polygon.models


class Migration(migrations.Migration):

    dependencies = [
        ('polygon', '0012_auto_20180904_1306'),
    ]

    operations = [
        migrations.AlterField(
            model_name='asset',
            name='file',
            field=models.FileField(storage=django.core.files.storage.FileSystemStorage(location='/Users/Scott/PycharmProject/eoj3-jan/repo'), upload_to='assets/%Y%m%d/', verbose_name='文件'),
        ),
        migrations.AlterField(
            model_name='asset',
            name='name',
            field=models.CharField(max_length=24, validators=[polygon.models.NameValidator()], verbose_name='助记符'),
        ),
        migrations.AlterField(
            model_name='case',
            name='activated',
            field=models.BooleanField(default=True, verbose_name='加入测试数据'),
        ),
        migrations.AlterField(
            model_name='case',
            name='case_number',
            field=models.PositiveIntegerField(default=1, verbose_name='测试点编号'),
        ),
        migrations.AlterField(
            model_name='case',
            name='description',
            field=models.TextField(blank=True, verbose_name='描述'),
        ),
        migrations.AlterField(
            model_name='case',
            name='fingerprint',
            field=models.CharField(default='invalid', max_length=64, verbose_name='指纹'),
        ),
        migrations.AlterField(
            model_name='case',
            name='group',
            field=models.PositiveIntegerField(default=0, verbose_name='分组编号'),
        ),
        migrations.AlterField(
            model_name='case',
            name='in_pretests',
            field=models.BooleanField(default=False, verbose_name='加入 Pretests'),
        ),
        migrations.AlterField(
            model_name='case',
            name='in_samples',
            field=models.BooleanField(default=False, verbose_name='加入样例'),
        ),
        migrations.AlterField(
            model_name='case',
            name='input_file',
            field=models.FileField(storage=django.core.files.storage.FileSystemStorage(location='/Users/Scott/PycharmProject/eoj3-jan/repo'), upload_to='cases/%Y%m%d/', verbose_name='输入文件'),
        ),
        migrations.AlterField(
            model_name='case',
            name='output_file',
            field=models.FileField(storage=django.core.files.storage.FileSystemStorage(location='/Users/Scott/PycharmProject/eoj3-jan/repo'), upload_to='cases/%Y%m%d/', verbose_name='输出文件'),
        ),
        migrations.AlterField(
            model_name='case',
            name='output_lock',
            field=models.BooleanField(default=False, verbose_name='锁定输出内容'),
        ),
        migrations.AlterField(
            model_name='case',
            name='points',
            field=models.PositiveIntegerField(default=10, verbose_name='分值'),
        ),
        migrations.AlterField(
            model_name='program',
            name='code',
            field=models.TextField(blank=True, verbose_name='代码'),
        ),
        migrations.AlterField(
            model_name='program',
            name='lang',
            field=models.CharField(choices=[('cpp', 'C++11'), ('cc14', 'C++14'), ('java', 'Java'), ('python', 'Python')], default='cc14', max_length=12, verbose_name='语言'),
        ),
        migrations.AlterField(
            model_name='program',
            name='name',
            field=models.CharField(max_length=24, validators=[polygon.models.NameValidator()], verbose_name='名称'),
        ),
        migrations.AlterField(
            model_name='program',
            name='tag',
            field=models.CharField(choices=[('checker', '输出校验'), ('interactor', '交互程序'), ('generator', '生成器'), ('validator', '输入校验'), ('solution_main', '解答 - 标准答案'), ('solution_correct', '解答 - 正确'), ('solution_tle_or_ok', '解答 - 超时或正确'), ('solution_wa', '解答 - 输出答案错误'), ('solution_incorrect', '解答 - 不正确'), ('solution_fail', '解答 - 运行时错误'), ('useless', '没用的')], default='checker', max_length=24, verbose_name='标记为'),
        ),
        migrations.AlterField(
            model_name='revision',
            name='enable_group',
            field=models.BooleanField(default=False, verbose_name='启用捆绑测试'),
        ),
        migrations.AlterField(
            model_name='revision',
            name='group_count',
            field=models.PositiveIntegerField(default=0, verbose_name='分组数量'),
        ),
        migrations.AlterField(
            model_name='revision',
            name='group_dependencies',
            field=models.TextField(blank=True, verbose_name='分组间依赖关系'),
        ),
        migrations.AlterField(
            model_name='revision',
            name='group_points',
            field=models.TextField(blank=True, verbose_name='分组分值'),
        ),
        migrations.AlterField(
            model_name='revision',
            name='memory_limit',
            field=models.PositiveIntegerField(default=256, verbose_name='内存限制 (MB)'),
        ),
        migrations.AlterField(
            model_name='revision',
            name='status',
            field=models.IntegerField(choices=[(-1, 'Discarded'), (0, 'Undergoing'), (1, 'Done')], default=0, verbose_name='状态'),
        ),
        migrations.AlterField(
            model_name='revision',
            name='time_limit',
            field=models.PositiveIntegerField(default=2000, verbose_name='时限 (ms)'),
        ),
        migrations.AlterField(
            model_name='revision',
            name='well_form_policy',
            field=models.BooleanField(default=True, verbose_name='对测试数据中的空白、换行、不可见字符进行自动处理'),
        ),
        migrations.AlterField(
            model_name='statement',
            name='description',
            field=models.TextField(blank=True, verbose_name='描述'),
        ),
        migrations.AlterField(
            model_name='statement',
            name='hint',
            field=models.TextField(blank=True, verbose_name='提示'),
        ),
        migrations.AlterField(
            model_name='statement',
            name='input',
            field=models.TextField(blank=True, verbose_name='输入 / 交互约定'),
        ),
        migrations.AlterField(
            model_name='statement',
            name='name',
            field=models.CharField(default='default', max_length=24, validators=[polygon.models.NameValidator()], verbose_name='助记符'),
        ),
        migrations.AlterField(
            model_name='statement',
            name='output',
            field=models.TextField(blank=True, verbose_name='输出'),
        ),
        migrations.AlterField(
            model_name='statement',
            name='title',
            field=models.CharField(max_length=192, verbose_name='题目标题'),
        ),
        migrations.AlterField(
            model_name='template',
            name='grader_code',
            field=models.TextField(verbose_name='评分代码'),
        ),
        migrations.AlterField(
            model_name='template',
            name='language',
            field=models.CharField(choices=[('c', 'C'), ('cpp', 'C++11'), ('python', 'Python 3'), ('java', 'Java 8'), ('cc14', 'C++14'), ('cc17', 'C++17'), ('cs', 'C#'), ('py2', 'Python 2'), ('scipy', 'Python (SCI)'), ('php', 'PHP 7'), ('perl', 'Perl'), ('hs', 'Haskell'), ('js', 'Javascript'), ('ocaml', 'OCaml'), ('pypy', 'PyPy'), ('pypy3', 'PyPy 3'), ('pas', 'Pascal'), ('rs', 'Rust'), ('scala', 'Scala'), ('text', 'Text')], default='cpp', max_length=12, verbose_name='语言'),
        ),
        migrations.AlterField(
            model_name='template',
            name='template_code',
            field=models.TextField(verbose_name='模板代码'),
        ),
    ]
