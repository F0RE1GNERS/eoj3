# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-03-30 21:27
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('problem', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=48)),
                ('description', models.TextField(blank=True)),
                ('rule', models.CharField(choices=[('acm', 'ACM Rule'), ('oi', 'OI Rule')], default='acm', max_length=12, verbose_name='Rule')),
                ('allowed_lang', models.CharField(default='c, cpp, java, python', max_length=192, verbose_name='Allowed languages')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('freeze', models.BooleanField(default=False)),
                ('freeze_time', models.DateTimeField(blank=True, null=True)),
                ('standings_update_time', models.DateTimeField(blank=True, null=True)),
                ('visible', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
                ('standings_public', models.BooleanField(default=True)),
                ('contest_header', models.TextField(blank=True, verbose_name='Header of standings')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_contests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='ContestClarification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('open', 'Question'), ('solve', 'Solved'), ('close', 'No Response'), ('note', 'Clarification')], max_length=12)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Contest')),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='ContestInvitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=24)),
                ('comment', models.TextField(blank=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Contest')),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='ContestParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True)),
                ('score', models.IntegerField(default=0)),
                ('penalty', models.IntegerField(default=0)),
                ('html_cache', models.TextField(blank=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Contest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-score', 'penalty'],
            },
        ),
        migrations.CreateModel(
            name='ContestProblem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=12)),
                ('total_submit_number', models.IntegerField(default=0)),
                ('total_accept_number', models.IntegerField(default=0)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Contest')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.Problem')),
            ],
            options={
                'ordering': ['identifier'],
            },
        ),
        migrations.AddField(
            model_name='contest',
            name='participants',
            field=models.ManyToManyField(related_name='contests', through='contest.ContestParticipant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contest',
            name='problems',
            field=models.ManyToManyField(through='contest.ContestProblem', to='problem.Problem'),
        ),
        migrations.AlterUniqueTogether(
            name='contestproblem',
            unique_together=set([('problem', 'contest')]),
        ),
        migrations.AlterUniqueTogether(
            name='contestparticipant',
            unique_together=set([('user', 'contest')]),
        ),
        migrations.AlterUniqueTogether(
            name='contestinvitation',
            unique_together=set([('contest', 'code')]),
        ),
    ]
